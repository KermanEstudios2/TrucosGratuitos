local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\50\242","\88\28\220\159\221"),function(v42) if (v9(v42,5 -3 )==81) then v30=v8(v11(v42,1,1));return "";else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v131=v13(v103,v30);v30=nil;return v131;else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * (48013535 -31236319)) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==0) then v57=v34();v58=v34();v56=1;end if (3==v56) then if (v61==0) then if (v60==(0 -0)) then return v62 * 0 ;else local v132=0;while true do if (v132==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -(1 -0)) or 1 ;v56=3;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (2==v64) then v66={};for v114=1, #v65 do v66[v114]=v10(v9(v11(v65,v114,v114)));end v64=3;end if (v64==3) then return v14(v66);end if (0==v64) then v65=nil;if  not v63 then local v121=0;while true do if (v121==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=1;end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80=1,v71 do local v81=0;local v82;local v83;while true do if (v81==0) then v82=v32();v83=nil;v81=1;end if (1==v81) then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==(934 -(857 + 74))) then v83=v36();end v72[v80]=v83;break;end end end v70[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1)==0) then local v110=v31(v85,2,3);local v111=v31(v85,4,6);local v112={v33(),v33(),nil,nil};if (v110==0) then local v122=0;while true do if (v122==0) then v112[3]=v33();v112[4]=v33();break;end end elseif (v110==1) then v112[3]=v34();elseif (v110==(570 -(367 + 201))) then v112[3]=v34() -(2^16) ;elseif (v110==(930 -(214 + 713))) then local v137=0;while true do if (v137==0) then v112[3]=v34() -(2^16) ;v112[4]=v33();break;end end end if (v31(v111,1,1)==1) then v112[2]=v72[v112[2]];end if (v31(v111,2,2)==1) then v112[3]=v72[v112[3]];end if (v31(v111,1 + 2 ,3)==1) then v112[1 + 3 ]=v72[v112[4]];end v67[v84]=v112;end end for v86=1,v34() do v68[v86-1 ]=v39();end return v70;end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v88=v77;local v89=v78;local v90=v79;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v108=0,v96 do if (v108>=v90) then v94[v108-v90 ]=v95[v108 + 1 ];else v98[v108]=v95[v108 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v109=0;while true do if (v109==1) then if (v101<=48) then if (v101<=23) then if (v101<=11) then if (v101<=5) then if (v101<=2) then if (v101<=0) then local v140=0;local v141;local v142;local v143;while true do if (v140==1) then v143=v98[v141] + v142 ;v98[v141]=v143;v140=2;end if (v140==0) then v141=v100[2];v142=v98[v141 + 2 ];v140=1;end if (v140==2) then if (v142>0) then if (v143<=v98[v141 + 1 ]) then local v466=0;while true do if (v466==0) then v92=v100[3];v98[v141 + 3 ]=v143;break;end end end elseif (v143>=v98[v141 + 1 ]) then local v467=0;while true do if (v467==0) then v92=v100[3];v98[v141 + 3 ]=v143;break;end end end break;end end elseif (v101>(878 -(282 + 595))) then local v195=0;local v196;local v197;local v198;while true do if (v195==1) then v198=v98[v196 + (1639 -(1523 + 114)) ];if (v198>(0 + 0)) then if (v197>v98[v196 + 1 ]) then v92=v100[3];else v98[v196 + 3 ]=v197;end elseif (v197<v98[v196 + (1 -0) ]) then v92=v100[3];else v98[v196 + 3 ]=v197;end break;end if (v195==0) then v196=v100[2];v197=v98[v196];v195=1;end end else v98[v100[2]]=v76[v100[3]];end elseif (v101<=3) then v98[v100[1067 -(68 + 997) ]]=v98[v100[3]][v100[4]];elseif (v101>4) then v98[v100[2]]=v40(v89[v100[3]],nil,v76);else local v202=v100[2];local v203=v98[v202];for v329=v202 + 1 ,v93 do v15(v203,v98[v329]);end end elseif (v101<=8) then if (v101<=6) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101==7) then local v204=0;local v205;local v206;local v207;local v208;while true do if (v204==0) then v205=v100[2];v206,v207=v91(v98[v205](v21(v98,v205 + 1 ,v100[3])));v204=1;end if (1==v204) then v93=(v207 + v205) -1 ;v208=0;v204=2;end if (v204==2) then for v427=v205,v93 do local v428=0;while true do if (v428==0) then v208=v208 + 1 ;v98[v427]=v206[v208];break;end end end break;end end else local v209=0;local v210;local v211;while true do if (v209==1) then for v429=v210 + 1 ,v100[3] do v15(v211,v98[v429]);end break;end if (v209==0) then v210=v100[2];v211=v98[v210];v209=1;end end end elseif (v101<=9) then local v147=0;local v148;local v149;while true do if (v147==1) then v98[v148 + 1 ]=v149;v98[v148]=v149[v100[17 -13 ]];break;end if (v147==0) then v148=v100[1272 -(226 + 1044) ];v149=v98[v100[3]];v147=1;end end elseif (v101==10) then local v212=0;local v213;local v214;local v215;while true do if (v212==0) then v213=v100[2];v214=v98[v213];v212=1;end if (v212==1) then v215=v100[3];for v430=1,v215 do v214[v430]=v98[v213 + v430 ];end break;end end else v98[v100[2]]={};end elseif (v101<=17) then if (v101<=14) then if (v101<=12) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>13) then if  not v98[v100[119 -(32 + 85) ]] then v92=v92 + 1 ;else v92=v100[3];end else local v218=0;local v219;while true do if (0==v218) then v219=v98[v100[4]];if  not v219 then v92=v92 + 1 ;else local v468=0;while true do if (0==v468) then v98[v100[2]]=v219;v92=v100[3];break;end end end break;end end end elseif (v101<=15) then local v150=v100[2];local v151,v152=v91(v98[v150](v21(v98,v150 + 1 + 0 ,v93)));v93=(v152 + v150) -1 ;local v153=0;for v191=v150,v93 do local v192=0;while true do if (v192==0) then v153=v153 + 1 ;v98[v191]=v151[v153];break;end end end elseif (v101==16) then local v220=0;local v221;local v222;while true do if (v220==1) then for v433=v221 + 1 ,v100[1 + 3 ] do v222=v222   .. v98[v433] ;end v98[v100[2]]=v222;break;end if (0==v220) then v221=v100[3];v222=v98[v221];v220=1;end end elseif (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=(977 -(892 + 65))) then if (v101<=18) then local v154=0;local v155;local v156;local v157;while true do if (v154==0) then v155=v100[2];v156=v98[v155];v154=1;end if (v154==1) then v157=v100[3];for v364=1,v157 do v156[v364]=v98[v155 + v364 ];end break;end end elseif (v101==19) then v98[v100[2]]=v76[v100[7 -4 ]];else local v225=0;local v226;local v227;local v228;local v229;while true do if (v225==2) then for v434=v226,v93 do local v435=0;while true do if (v435==0) then v229=v229 + 1 ;v98[v434]=v227[v229];break;end end end break;end if (v225==1) then v93=(v228 + v226) -1 ;v229=0;v225=2;end if (v225==0) then v226=v100[2];v227,v228=v91(v98[v226](v98[v226 + 1 ]));v225=1;end end end elseif (v101<=(38 -17)) then v98[v100[2]]();elseif (v101==22) then local v230=v100[2];local v231=v98[v230];local v232=v98[v230 + (3 -1) ];if (v232>0) then if (v231>v98[v230 + (351 -(87 + 263)) ]) then v92=v100[3];else v98[v230 + 3 ]=v231;end elseif (v231<v98[v230 + 1 ]) then v92=v100[3];else v98[v230 + 3 ]=v231;end elseif (v98[v100[2]]==v100[184 -(67 + 113) ]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=35) then if (v101<=(22 + 7)) then if (v101<=26) then if (v101<=24) then v92=v100[3];elseif (v101>25) then local v233=0;local v234;local v235;local v236;local v237;while true do if (v233==0) then v234=v100[2];v235,v236=v91(v98[v234](v21(v98,v234 + 1 ,v100[3])));v233=1;end if (v233==1) then v93=(v236 + v234) -1 ;v237=0;v233=2;end if (v233==2) then for v440=v234,v93 do local v441=0;while true do if (v441==0) then v237=v237 + 1 ;v98[v440]=v235[v237];break;end end end break;end end else do return v98[v100[4 -2 ]];end end elseif (v101<=27) then v76[v100[3]]=v98[v100[2]];elseif (v101==28) then local v238=0;local v239;while true do if (v238==0) then v239=v100[2 + 0 ];do return v98[v239](v21(v98,v239 + 1 ,v100[3]));end break;end end else v92=v100[3];end elseif (v101<=32) then if (v101<=30) then v98[v100[2]]=v75[v100[3]];elseif (v101>31) then local v241=v89[v100[11 -8 ]];local v242;local v243={};v242=v18({},{[v7("\237\139\241\222\5\215\172","\97\178\212\152\176")]=function(v338,v339) local v340=v243[v339];return v340[1][v340[2]];end,[v7("\242\216\19\254\13\196\233\25\254\2","\122\173\135\125\155")]=function(v341,v342,v343) local v344=0;local v345;while true do if (v344==0) then v345=v243[v342];v345[1][v345[2]]=v343;break;end end end});for v346=1,v100[956 -(802 + 150) ] do local v347=0;local v348;while true do if (v347==0) then v92=v92 + 1 ;v348=v88[v92];v347=1;end if (v347==1) then if (v348[1]==82) then v243[v346-1 ]={v98,v348[3]};else v243[v346-(2 -1) ]={v75,v348[3]};end v97[ #v97 + 1 ]=v243;break;end end end v98[v100[2]]=v40(v241,v242,v76);else local v245=0;local v246;local v247;local v248;local v249;while true do if (v245==2) then for v446=v246,v93 do local v447=0;while true do if (v447==0) then v249=v249 + (1 -0) ;v98[v446]=v247[v249];break;end end end break;end if (v245==1) then v93=(v248 + v246) -1 ;v249=0;v245=2;end if (v245==0) then v246=v100[2];v247,v248=v91(v98[v246](v21(v98,v246 + 1 ,v93)));v245=1;end end end elseif (v101<=33) then v98[v100[2]]=v98[v100[3]][v100[4]];elseif (v101>34) then v98[v100[2 + 0 ]][v98[v100[1000 -(915 + 82) ]]]=v98[v100[4]];else local v252=0;local v253;while true do if (v252==0) then v253=v100[2];v98[v253]=v98[v253](v21(v98,v253 + 1 ,v93));break;end end end elseif (v101<=(116 -75)) then if (v101<=(23 + 15)) then if (v101<=36) then v76[v100[3]]=v98[v100[2]];elseif (v101>(48 -11)) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=39) then do return v98[v100[2]]();end elseif (v101==(1227 -(1069 + 118))) then v98[v100[2]]=v98[v100[6 -3 ]]%v98[v100[4]] ;else do return;end end elseif (v101<=44) then if (v101<=42) then do return v98[v100[2]]();end elseif (v101>43) then do return;end else v98[v100[2]]=v100[3];end elseif (v101<=46) then if (v101>45) then local v259=0;local v260;while true do if (v259==0) then v260=v100[2];v98[v260](v21(v98,v260 + 1 ,v93));break;end end else v98[v100[2]]=v75[v100[6 -3 ]];end elseif (v101==(9 + 38)) then v98[v100[2]]= #v98[v100[3]];else local v264=0;local v265;local v266;local v267;local v268;while true do if (v264==0) then v265=v100[3 -1 ];v266,v267=v91(v98[v265](v98[v265 + 1 ]));v264=1;end if (v264==2) then for v448=v265,v93 do local v449=0;while true do if (v449==0) then v268=v268 + 1 ;v98[v448]=v266[v268];break;end end end break;end if (v264==1) then v93=(v267 + v265) -1 ;v268=0;v264=2;end end end elseif (v101<=72) then if (v101<=60) then if (v101<=54) then if (v101<=51) then if (v101<=49) then v98[v100[2 + 0 ]][v98[v100[3]]]=v100[4];elseif (v101>50) then v98[v100[2]]();else local v269=0;local v270;while true do if (v269==0) then v270=v100[2];v98[v270]=v98[v270](v98[v270 + 1 ]);break;end end end elseif (v101<=52) then local v169=0;local v170;while true do if (v169==0) then v170=v100[2];v98[v170]=v98[v170](v21(v98,v170 + 1 ,v100[3]));break;end end elseif (v101>53) then v98[v100[2]]=v100[3] + v98[v100[4]] ;elseif (v100[2]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=57) then if (v101<=55) then v98[v100[793 -(368 + 423) ]]=v98[v100[3]] + v100[4] ;elseif (v101>56) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else local v273=0;local v274;local v275;while true do if (v273==1) then for v450=1, #v97 do local v451=0;local v452;while true do if (v451==0) then v452=v97[v450];for v505=0, #v452 do local v506=0;local v507;local v508;local v509;while true do if (v506==1) then v509=v507[2];if ((v508==v98) and (v509>=v274)) then local v521=0;while true do if (v521==0) then v275[v509]=v508[v509];v507[1]=v275;break;end end end break;end if (v506==0) then v507=v452[v505];v508=v507[1];v506=1;end end end break;end end end break;end if (v273==0) then v274=v100[2];v275={};v273=1;end end end elseif (v101<=58) then v98[v100[2]]=v98[v100[3]] + v100[4] ;elseif (v101>59) then local v276=0;local v277;while true do if (0==v276) then v277=v100[2];v98[v277](v21(v98,v277 + 1 ,v100[3]));break;end end else v98[v100[2]]=v98[v100[9 -6 ]]%v98[v100[4]] ;end elseif (v101<=66) then if (v101<=(81 -(10 + 8))) then if (v101<=61) then v98[v100[7 -5 ]][v100[3]]=v98[v100[4]];elseif (v101==62) then local v279=0;local v280;while true do if (v279==0) then v280=v100[2];v98[v280](v21(v98,v280 + 1 ,v100[3]));break;end end elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=64) then for v193=v100[2],v100[3] do v98[v193]=nil;end elseif (v101==65) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else local v282=0;local v283;while true do if (0==v282) then v283=v100[2];v98[v283]=v98[v283](v21(v98,v283 + 1 ,v100[3]));break;end end end elseif (v101<=69) then if (v101<=67) then if (v98[v100[444 -(416 + 26) ]]==v100[4]) then v92=v92 + 1 ;else v92=v100[9 -6 ];end elseif (v101>68) then local v285=0;local v286;while true do if (0==v285) then v286=v100[2];v98[v286]=v98[v286](v21(v98,v286 + 1 ,v93));break;end end else for v351=v100[2],v100[3] do v98[v351]=nil;end end elseif (v101<=70) then local v175=0;local v176;while true do if (v175==0) then v176=v98[v100[4]];if  not v176 then v92=v92 + 1 + 0 ;else v98[v100[3 -1 ]]=v176;v92=v100[3];end break;end end elseif (v101==71) then local v287=0;local v288;local v289;local v290;while true do if (v287==1) then v290=v98[v288] + v289 ;v98[v288]=v290;v287=2;end if (v287==0) then v288=v100[2];v289=v98[v288 + 2 ];v287=1;end if (v287==2) then if (v289>0) then if (v290<=v98[v288 + 1 ]) then local v494=0;while true do if (0==v494) then v92=v100[3];v98[v288 + 3 ]=v290;break;end end end elseif (v290>=v98[v288 + (439 -(145 + 293)) ]) then local v495=0;while true do if (0==v495) then v92=v100[3];v98[v288 + 3 ]=v290;break;end end end break;end end else local v291=0;local v292;while true do if (v291==0) then v292=v100[2];do return v21(v98,v292,v93);end break;end end end elseif (v101<=84) then if (v101<=78) then if (v101<=75) then if (v101<=73) then local v177=0;local v178;local v179;while true do if (v177==1) then for v371=1, #v97 do local v372=0;local v373;while true do if (v372==0) then v373=v97[v371];for v472=0, #v373 do local v473=0;local v474;local v475;local v476;while true do if (v473==0) then v474=v373[v472];v475=v474[1];v473=1;end if (v473==1) then v476=v474[2];if ((v475==v98) and (v476>=v178)) then local v520=0;while true do if (v520==0) then v179[v476]=v475[v476];v474[1]=v179;break;end end end break;end end end break;end end end break;end if (v177==0) then v178=v100[2];v179={};v177=1;end end elseif (v101==(504 -(44 + 386))) then if (v98[v100[1488 -(998 + 488) ]]==v98[v100[4]]) then v92=v92 + 1 + 0 ;else v92=v100[3];end else local v293=0;local v294;local v295;while true do if (v293==0) then v294=v100[2];v295=v98[v100[3]];v293=1;end if (v293==1) then v98[v294 + 1 ]=v295;v98[v294]=v295[v100[4]];break;end end end elseif (v101<=76) then local v180=0;local v181;while true do if (0==v180) then v181=v100[2];v98[v181]=v98[v181]();break;end end elseif (v101>77) then v98[v100[2]]=v40(v89[v100[3]],nil,v76);else v98[v100[2]][v98[v100[3]]]=v98[v100[4 + 0 ]];end elseif (v101<=81) then if (v101<=79) then local v182=0;local v183;while true do if (v182==0) then v183=v100[2];v98[v183](v98[v183 + (773 -(201 + 571)) ]);break;end end elseif (v101>80) then local v299=0;local v300;while true do if (v299==0) then v300=v100[2];do return v98[v300](v21(v98,v300 + 1 ,v100[3]));end break;end end else local v301=0;local v302;while true do if (v301==0) then v302=v100[1140 -(116 + 1022) ];do return v21(v98,v302,v93);end break;end end end elseif (v101<=82) then v98[v100[2]]=v98[v100[3]];elseif (v101==83) then local v303=0;local v304;while true do if (v303==0) then v304=v100[2];v98[v304](v98[v304 + 1 ]);break;end end else v98[v100[2]]={};end elseif (v101<=90) then if (v101<=87) then if (v101<=85) then v98[v100[2]]= #v98[v100[3]];elseif (v101==86) then v98[v100[2]]=v100[3];else do return v98[v100[2]];end end elseif (v101<=88) then local v187=0;local v188;while true do if (0==v187) then v188=v100[2];do return v21(v98,v188,v188 + v100[3] );end break;end end elseif (v101>(370 -281)) then v98[v100[2]][v98[v100[3]]]=v100[4];else local v310=0;local v311;local v312;local v313;while true do if (1==v310) then v313={};v312=v18({},{[v7("\187\254\9\183\59\52\208","\168\228\161\96\217\95\81")]=function(v453,v454) local v455=0;local v456;while true do if (v455==0) then v456=v313[v454];return v456[1][v456[2 + 0 ]];end end end,[v7("\228\238\32\89\56\94\213\213\43\68","\55\187\177\78\60\79")]=function(v457,v458,v459) local v460=0;local v461;while true do if (0==v460) then v461=v313[v458];v461[1][v461[2]]=v459;break;end end end});v310=2;end if (v310==0) then v311=v89[v100[3]];v312=nil;v310=1;end if (v310==2) then for v462=1,v100[14 -10 ] do v92=v92 + 1 ;local v463=v88[v92];if (v463[1]==(291 -209)) then v313[v462-1 ]={v98,v463[3]};else v313[v462-1 ]={v75,v463[7 -4 ]};end v97[ #v97 + 1 + 0 ]=v313;end v98[v100[1 + 1 ]]=v40(v311,v312,v76);break;end end end elseif (v101<=(978 -(261 + 624))) then if (v101<=91) then v98[v100[2]]=v98[v100[3]];elseif (v101==92) then local v314=0;local v315;local v316;while true do if (1==v314) then for v465=v315 + 1 ,v93 do v15(v316,v98[v465]);end break;end if (v314==0) then v315=v100[2];v316=v98[v315];v314=1;end end else local v317=0;local v318;while true do if (v317==0) then v318=v100[2];v98[v318]=v98[v318]();break;end end end elseif (v101<=95) then if (v101>94) then if (v100[2]==v98[v100[4]]) then v92=v92 + (1 -0) ;else v92=v100[3];end else local v319=0;local v320;while true do if (v319==0) then v320=v100[2];v98[v320](v21(v98,v320 + 1 ,v93));break;end end end elseif (v101>96) then local v321=v100[2];v98[v321]=v98[v321](v98[v321 + 1 ]);else local v323=v100[3];local v324=v98[v323];for v359=v323 + 1 ,v100[4] do v324=v324   .. v98[v359] ;end v98[v100[1082 -(1020 + 60) ]]=v324;end v92=v92 + 1 ;break;end if (v109==0) then v100=v88[v92];v101=v100[1];v109=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
